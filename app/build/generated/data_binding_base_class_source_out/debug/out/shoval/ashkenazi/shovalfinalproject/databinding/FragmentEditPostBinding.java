// Generated by view binder compiler. Do not edit!
package shoval.ashkenazi.shovalfinalproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import shoval.ashkenazi.shovalfinalproject.R;
import shoval.ashkenazi.shovalfinalproject.widgets.MultiSpinner;

public final class FragmentEditPostBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final ImageButton btnAdd;

  @NonNull
  public final Button btnAddImage;

  @NonNull
  public final ImageButton btnChange;

  @NonNull
  public final LinearLayout btns;

  @NonNull
  public final EditText etGradients;

  @NonNull
  public final EditText etRecipe;

  @NonNull
  public final EditText etTitle;

  @NonNull
  public final ImageView ivImage;

  @NonNull
  public final LinearLayout lAddImage;

  @NonNull
  public final LinearLayout lUpload;

  @NonNull
  public final LinearLayout layoutInternal;

  @NonNull
  public final MultiSpinner spCategory;

  @NonNull
  public final TextView tvAdd;

  @NonNull
  public final TextView tvChange;

  private FragmentEditPostBinding(@NonNull ScrollView rootView, @NonNull ImageButton btnAdd,
      @NonNull Button btnAddImage, @NonNull ImageButton btnChange, @NonNull LinearLayout btns,
      @NonNull EditText etGradients, @NonNull EditText etRecipe, @NonNull EditText etTitle,
      @NonNull ImageView ivImage, @NonNull LinearLayout lAddImage, @NonNull LinearLayout lUpload,
      @NonNull LinearLayout layoutInternal, @NonNull MultiSpinner spCategory,
      @NonNull TextView tvAdd, @NonNull TextView tvChange) {
    this.rootView = rootView;
    this.btnAdd = btnAdd;
    this.btnAddImage = btnAddImage;
    this.btnChange = btnChange;
    this.btns = btns;
    this.etGradients = etGradients;
    this.etRecipe = etRecipe;
    this.etTitle = etTitle;
    this.ivImage = ivImage;
    this.lAddImage = lAddImage;
    this.lUpload = lUpload;
    this.layoutInternal = layoutInternal;
    this.spCategory = spCategory;
    this.tvAdd = tvAdd;
    this.tvChange = tvChange;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentEditPostBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentEditPostBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_edit_post, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentEditPostBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAdd;
      ImageButton btnAdd = ViewBindings.findChildViewById(rootView, id);
      if (btnAdd == null) {
        break missingId;
      }

      id = R.id.btnAddImage;
      Button btnAddImage = ViewBindings.findChildViewById(rootView, id);
      if (btnAddImage == null) {
        break missingId;
      }

      id = R.id.btnChange;
      ImageButton btnChange = ViewBindings.findChildViewById(rootView, id);
      if (btnChange == null) {
        break missingId;
      }

      id = R.id.btns;
      LinearLayout btns = ViewBindings.findChildViewById(rootView, id);
      if (btns == null) {
        break missingId;
      }

      id = R.id.etGradients;
      EditText etGradients = ViewBindings.findChildViewById(rootView, id);
      if (etGradients == null) {
        break missingId;
      }

      id = R.id.etRecipe;
      EditText etRecipe = ViewBindings.findChildViewById(rootView, id);
      if (etRecipe == null) {
        break missingId;
      }

      id = R.id.etTitle;
      EditText etTitle = ViewBindings.findChildViewById(rootView, id);
      if (etTitle == null) {
        break missingId;
      }

      id = R.id.ivImage;
      ImageView ivImage = ViewBindings.findChildViewById(rootView, id);
      if (ivImage == null) {
        break missingId;
      }

      id = R.id.lAddImage;
      LinearLayout lAddImage = ViewBindings.findChildViewById(rootView, id);
      if (lAddImage == null) {
        break missingId;
      }

      id = R.id.lUpload;
      LinearLayout lUpload = ViewBindings.findChildViewById(rootView, id);
      if (lUpload == null) {
        break missingId;
      }

      id = R.id.layoutInternal;
      LinearLayout layoutInternal = ViewBindings.findChildViewById(rootView, id);
      if (layoutInternal == null) {
        break missingId;
      }

      id = R.id.spCategory;
      MultiSpinner spCategory = ViewBindings.findChildViewById(rootView, id);
      if (spCategory == null) {
        break missingId;
      }

      id = R.id.tvAdd;
      TextView tvAdd = ViewBindings.findChildViewById(rootView, id);
      if (tvAdd == null) {
        break missingId;
      }

      id = R.id.tvChange;
      TextView tvChange = ViewBindings.findChildViewById(rootView, id);
      if (tvChange == null) {
        break missingId;
      }

      return new FragmentEditPostBinding((ScrollView) rootView, btnAdd, btnAddImage, btnChange,
          btns, etGradients, etRecipe, etTitle, ivImage, lAddImage, lUpload, layoutInternal,
          spCategory, tvAdd, tvChange);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
